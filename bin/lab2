Реализовать API придуманного сервиса.

Необходимые условия: 

Страница регистрации пользователя, с заполнением минимальной информации о себе (имя, почтовый адрес, телефон)

OAuth 2.0 авторизация (включая redirect uri, state, token expired)

при этом страницу создание приложения делать не обязательно 

можно записать clien_id и secret_id приложения - в БД

Сессия пользователя (может быть реализованна простой проверкой токена в БД)

Открытый метод (например /status) который доступен не авторизованному пользователю

Метод получения информации о пользователе (например /me)

Придумать и наполнить свое API данными (желательно из прошлой лабораторной работы)

Реализовать 2 и более методов доступа к этим данным (доступно авторизованным пользователям), не забыв про пагинацию например:

 /books - вернет список всех книг с минимальной информацией о каждой id, author_id, title, number of pages, ISBN

 /books/{id} вернет книгу с расширенной информацией о ней

аналогично /authors

и /authors/{id} - в информации каждого автора была бы информация о книгах где он автор



Приложение должно быть монолитным

Формат данных - json

БД - SQL, NoSQL - не принципиально

Какими данными оперировать - необходимо заранее договориться через почту, книги-авторы использовать нельзя. Мы не добиваемся в этой лабораторной полного разнообразия данных, повторы возможны, но мы попытаемся минимизировать их.

#######################################3
Сайт для заказа еды некоторого ресторана. В БД будет некоторая таблица содержащая название еды, цена и к какой категории относится (например напитки).
Метод для получения еды ресторана (без авторизации):
/menu_list - список всей еды
/menu_list/id - получение информации о конкретной еде
Два метода возвращают все столбцы таблицы еды.

Методы с использованием авторизации:
/order/id - получение информации о конкретном заказе
/order/ - получение всех заказов клиента

